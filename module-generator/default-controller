import ApiBaseController from 'App/Controllers/Http/Api/ApiBaseController'
import {HttpContextContract} from '@ioc:Adonis/Core/HttpContext'
import ##CAP_CLASS##Repo from "App/Repos/##CAP_CLASS##Repo";
import ##CAP_CLASS##Validator from "App/Validators/##CAP_CLASS##Validator";
import Attachment from "App/Models/Attachment";


export default class ##CAP_CLASS##Controller extends ApiBaseController {

    constructor() {
        super(##CAP_CLASS##Repo)
    }

    async store(ctx: HttpContextContract, instanceType?: number, mediaType?: String) {
        await ctx.request.validate(##CAP_CLASS##Validator)
        let input = ctx.request.only(this.repo.fillables())
        let row = await ##CAP_CLASS##Repo.store(input, ctx.request, instanceType || Attachment.TYPE[this.repo.model.name.toUpperCase()], mediaType)
        return this.apiResponse('Record Added Successfully', row)
    }

    async update(ctx: HttpContextContract, instanceType?: number, mediaType?: String): Promise<{ data: any; message: string; status: boolean }> {
        await ctx.request.validate(##CAP_CLASS##Validator)
        return super.update(ctx, instanceType, mediaType)
    }

}
